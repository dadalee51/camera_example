[1/12] Generating ../../servercert.pem.S
[2/12] Generating ../../prvtkey.pem.S
[3/12] Building ASM object esp-idf/main/CMakeFiles/__idf_main.dir/__/__/servercert.pem.S.obj
[4/12] Building ASM object esp-idf/main/CMakeFiles/__idf_main.dir/__/__/prvtkey.pem.S.obj
[5/12] Linking C static library esp-idf/main/libmain.a
[6/12] Performing build step for 'bootloader'
[1/1] cd /home/qq/Documents/github/camera_example/build/bootloader/esp-idf/esptool_py && /home/qq/.espressif/python_env/idf5.4_py3.12_env/bin/python /home/qq/esp/v5.4.2/esp-idf/components/partition_table/check_sizes.py --offset 0x10000 bootloader 0x0 /home/qq/Documents/github/camera_example/build/bootloader/bootloader.bin
Bootloader binary size 0x5760 bytes. 0xa8a0 bytes (66%) free.
[7/12] No install step for 'bootloader'
[8/12] Completed 'bootloader'
[9/12] Generating ld/sections.ld
[10/12] Linking CXX executable camera_example.elf
[11/12] Generating binary image from built executable
esptool.py v4.9.0
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /home/qq/Documents/github/camera_example/build/camera_example.bin
[12/12] cd /home/qq/Documents/github/camera_example/build/esp-idf/esptool_py && /home/qq/.espressif/python_env/idf5.4_py3.12_env/bin/python /home/qq/esp/v5.4.2/esp-idf/components/partition_table/check_sizes.py --offset 0x10000 partition --type app /home/qq/Documents/github/camera_example/build/partition_table/partition-table.bin /home/qq/Documents/github/camera_example/build/camera_example.bin
camera_example.bin binary size 0xf3b80 bytes. Smallest app partition is 0x100000 bytes. 0xc480 bytes (5%) free.
Warning: The smallest app partition is nearly full (5% free space left)!
